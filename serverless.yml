service: nowplaying

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: ruby2.5
  environment:
    CHECK_FOR_USER_ARN: ${self:custom.secrets.CHECK_FOR_USER_ARN}
    SPOTIFY_CLIENT_ID: ${self:custom.secrets.SPOTIFY_CLIENT_ID}
    SPOTIFY_CLIENT_SECRET: ${self:custom.secrets.SPOTIFY_CLIENT_SECRET}
    SPOTIFY_REDIRECT_URI: ${self:custom.secrets.SPOTIFY_REDIRECT_URI}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
    - Effect: Allow
      Action:
        - "sns:*"
      Resource: "arn:aws:sns:us-east-1:*:*"

functions:
  now_playing:
    handler: handler.now_playing
    events:
      - http:
          path: nowplaying
          method: post
          cors: true
    layers:
      - arn:aws:lambda:us-east-1:117620298113:layer:gemPacks:4

  check_for_user:
    handler: handler.check_for_user
    events:
      - sns: check_for_user
    layers:
      - arn:aws:lambda:us-east-1:117620298113:layer:gemPacks:4

  callback:
    handler: handler.callback
    events:
      - http:
          path: callback
          method: get
          cors: true
    layers:
      - arn:aws:lambda:us-east-1:117620298113:layer:gemPacks:4

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'nowplaying-users'
